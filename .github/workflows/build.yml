name: Build splace

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            runner: ubuntu-latest
          - os: windows
            arch: amd64
            runner: windows-latest
          - os: darwin
            arch: amd64
            runner: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build binary (Linux/macOS)
        if: matrix.os != 'windows'
        run: |
          mkdir -p artifacts
          ext=""
          if [ "${{ matrix.os }}" = "windows" ]; then ext=".exe"; fi
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} \
            go build -buildvcs=false -ldflags="-s -w" -o artifacts/splace-${{ matrix.os }}${ext}
        shell: bash

      - name: Build binary (Windows)
        if: matrix.os == 'windows'
        run: |
          & go build -buildvcs=false -ldflags="-s -w" -o splace-windows.exe
        shell: pwsh

      - name: Ensure artifacts directory (Windows)
        if: matrix.os == 'windows'
        run: mkdir artifacts
        shell: pwsh

      - name: Archive artifact (Linux/macOS)
        if: matrix.os != 'windows'
        run: |
          cd artifacts
          zip splace-${{ matrix.os }}.zip splace-${{ matrix.os }}*
        shell: bash

      - name: Archive artifact (Windows)
        if: matrix.os == 'windows'
        run: |
          Compress-Archive -Path splace-windows.exe -DestinationPath artifacts/splace-windows.zip
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: splace-${{ matrix.os }}
          path: artifacts/splace-${{ matrix.os }}.zip

      - name: Install NSIS
        if: matrix.os == 'windows'
        run: |
          choco install nsis -y

      - name: Debug artifacts before NSIS
        if: matrix.os == 'windows'
        run: |
          Write-Host "Current directory: $(Get-Location)"
          Write-Host "Artifacts directory contents:"
          Get-ChildItem -Path artifacts -Recurse | Format-List
        shell: pwsh

      - name: Build Windows installer (NSIS)
        if: matrix.os == 'windows'
        run: |
          makensis -V2 splace-installer.nsi
        shell: pwsh

      - name: Archive Windows installer
        if: matrix.os == 'windows'
        run: |
          Compress-Archive -Path artifacts/splace-windows-installer.exe -DestinationPath artifacts/splace-windows-installer.zip
        shell: pwsh

      - name: Upload Windows installer
        if: matrix.os == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: splace-windows-installer
          path: artifacts/splace-windows-installer.zip

      - name: Upload Windows installer
        if: matrix.os == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: splace-windows-installer-exe
          path: splace-installer.exe

      - name: Build macOS installer (.pkg)
        if: matrix.os == 'darwin'
        run: |
          mkdir -p pkgroot/usr/local/bin
          cp artifacts/splace-darwin pkgroot/usr/local/bin/splace
          pkgbuild --root pkgroot --identifier com.lpolish.splace --version 0.1.1 --install-location / splace-installer.pkg

      - name: Upload macOS installer
        if: matrix.os == 'darwin'
        uses: actions/upload-artifact@v4
        with:
          name: splace-macos-installer-pkg
          path: splace-installer.pkg

      - name: Generate Linux installer script
        if: matrix.os == 'linux'
        run: |
          cat > artifacts/install-linux.sh << 'EOF'
          #!/usr/bin/env bash
          set -e
          BIN="splace-linux"
          if [ ! -f "$BIN" ]; then
            echo "Binary $BIN not found"
            exit 1
          fi
          GLOBAL=false
          if [ "$1" = "--global" ] || [ "$1" = "-g" ]; then
            GLOBAL=true
          fi
          if [ "$GLOBAL" = true ]; then
            if ! command -v sudo >/dev/null 2>&1; then
              echo "sudo is required for global installation"
              exit 1
            fi
            echo "Installing splace globally (requires sudo)..."
            sudo install -m 0755 "$BIN" /usr/local/bin/splace
            echo "splace installed to /usr/local/bin/splace"
          else
            echo "Installing splace for current user..."
            mkdir -p "$HOME/.local/bin"
            install -m 0755 "$BIN" "$HOME/.local/bin/splace"
            echo "splace installed to $HOME/.local/bin/splace"
            echo "Ensure $HOME/.local/bin is in your PATH"
          fi
          EOF
          chmod +x artifacts/install-linux.sh

      - name: Archive Linux installer
        if: matrix.os == 'linux'
        run: |
          cd artifacts
          zip -j splace-linux-installer.zip install-linux.sh

      - name: Upload Linux installer artifact
        if: matrix.os == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: splace-linux-installer
          path: artifacts/splace-linux-installer.zip
